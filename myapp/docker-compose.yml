version: '3.8'

services:
  # Service pour la base de données PostgreSQL
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp_db
      POSTGRES_USER: myapp_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myapp_user -d myapp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - myapp_network

  # Service pour l'application Flask
  myapp:
    image: myapp:1
    container_name: myapp_container
    restart: unless-stopped
    ports:
      - "8080:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://myapp_user:MySecurePassword123!@postgres:5432/myapp_db
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - myapp_network

# Définition des volumes
volumes:
  postgres_data:
    driver: local

# Définition des secrets
secrets:
  postgres_password:
    file: ./postgres_password.txt

# Définition du réseau
networks:
  myapp_network:
    driver: bridge
